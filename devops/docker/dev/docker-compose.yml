version: '3'

networks:
  cybernetically-network:
    name: 'cybernetically-network'

volumes:
  cybernetically-postgres-volume:
    external: true
  cybernetically-pgadmin-volume:
    external: true

services:
  cybernetically-postgres:
    container_name: cybernetically-postgres
    image: postgres:13.3

    environment:
      POSTGRES_DB: ${PSQL_DATABASE}
      POSTGRES_USER: ${PSQL_USERNAME}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      PGDATA: '/var/lib/postgresql/data/pgdata'
    volumes:
      - cybernetically-postgres-volume:/var/lib/postgresql/data
    ports:
      - '${PSQL_PORT}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${PSQL_USERNAME}']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - cybernetically-network

  cybernetically-pgadmin:
    container_name: cybernetically-pgadmin
    image: dpage/pgadmin4:5.7
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@pg.com'
      PGADMIN_DEFAULT_PASSWORD: 'root'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - cybernetically-pgadmin-volume:/var/lib/pgadmin
    ports:
      - '5050:80'
    restart: unless-stopped
    depends_on:
      - cybernetically-postgres
    networks:
      - cybernetically-network

  cybernetically-nginx:
    image: nginx:alpine
    container_name: cybernetically-nginx
    ports:
      - 9090:9090
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./logs:/var/log/nginx/
    networks:
      - cybernetically-network
    depends_on:
      cybernetically-server:
        condition: service_started
      cybernetically-client:
        condition: service_started

  cybernetically-server:
    container_name: cybernetically-server
    image: node:16-alpine
    environment:
      NODE_ENV: ${NODE_ENV}
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}
      PSQL_URL: ${PSQL_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    working_dir: '/app'
    volumes:
      - ./../../../:/app
    command: 'npm run serve:server'
    tty: true
    depends_on:
      - cybernetically-postgres
    networks:
      - cybernetically-network

  cybernetically-client:
    container_name: cybernetically-client
    image: node:16-alpine
    ports:
      - 4200:4200
    working_dir: '/app'
    volumes:
      - ./../../../:/app
    command: 'npm run serve:client'
    tty: true
    depends_on:
      cybernetically-server:
        condition: service_started
    networks:
      - cybernetically-network
